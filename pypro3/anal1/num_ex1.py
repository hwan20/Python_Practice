#정규 분포를 따르는 난수를 이용하여 5행 4열 구조의 다차원 배열 객체를 생성하고
#각 행 단위로 합계와 최댓값을 구하시오
#출력 결과 예시
#1행 합계   : 0.8621332497162859
#1행 최댓값 : 0.3422690004932227
#2행 합계   : -1.5039264306910727
#2행 최댓값 : 0.44626169669315
#3행 합계   : 2.2852559938172514
#3행 최댓값 : 1.5507574553572447


import numpy as np


#정규 분포를 따르는 난수 5행 4열 구조의 다차원 배열 생성
a = np.random.randn(5, 4) 
print(a)

print()
b = a[0,]
print("1행  : ", b)
print("1행 합계 : ", np.sum(b))
print("1행 최대값 : ", np.max(b))

print()
c = a[1,]
print("2행  : ", c)
print("2행 합계 : ", np.sum(c))
print("2행 최대값 : ", np.max(c))

print()
d = a[2,]
print("3행  : ", d)
print("3행 합계 : ", np.sum(d))
print("3행 최대값 : ", np.max(d))


#indexing 관련 문제
#6행 6열의 다차원 zero행렬 객체를 생성한 후 다음과 같이 indexing하시오
#ex1) 36개의 셀에 1~36까지 정수 채우기
#ex2) 2번째 행 전체 원소 출력하기 출력 결과 : [7. 8. 9. 10. 11. 12.] 
#ex3) 5번째 열 전체 원소 출력하기 출력 결과 : [5. 11. 17. 23. 29. 35.]
#ex4) 15~29까지 아래처럼 출력하기 출력 결과 : [[15. 16. 17.]
#                                      [21. 22. 23.]
#                                      [27. 28. 29.]]

print()
#zero행렬 객체 생성
e = np.zeros((6,6))
print(e)

#36개의 셀에 1~36까지 정수 채우기
e = np.arange(1, 37.). reshape(6, 6)
print(e)
print()
print(e[1,]) #2번째 행 전체 원소 출력
print(e[:,4]) #5번째 열 전체 원소 출력
print(e[2:5, 2:5]) #15~29까지 다차원 출력

print()
#6행 4열의 다차원 zero 행렬 객체를 생성한 후 아래와 같이 처리하시오
#20~100사이의 난수 정수를 6개 발생시켜 각 행의 시작열에 난수 정수를 저장하고 두 번째 부터는 1씩 증가시켜 원소 저장하기
#첫 번째 행에 1000, 마지막 행에 6000으로 요소값 수정하기
#ex1) zero 다차원 배열 객체
#ex2) 난수 정수 발생 random.randint(s, e, n)
#ex3) zero 다차원 배열에 난수 정수 초기화 결과. 두 번째 열부터는 1씩 증가시켜 원소 저장하기
#ex4) 첫 번째 행에 1000, 마지막 행에 6000으로 수정
f = np.zeros((6, 4))
print(f)
print(f[:,1])
g = np.ones((6, 3)) 
print(g)

h = np.random.randint(20,100,6).reshape(6,1)
print(h)

aa = np.append(h, f, axis = 1)
print(aa)

bb = aa[:,0]
print(bb)




