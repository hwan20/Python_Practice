"""
집합형 자료를 이용해 리스트 타입의 li 변수가 기억하고 있는 값의 중복을 제거한 후
계속해서 리스트 타입의 값을 유지하려고 한다.
자료구조의 형식을 변경하는 함수를 이용하려고 할 때, 아래의 빈 칸을 순서대로 채우시오
"""

li=[1,2,2,2,3,4,5,5,5,2,2]
print(li)
im=set(li)
print(im)
li=list(im)
print(li)

print("-----------------------------")
"""
아래의 코드를 수행한 결과를 적으시오
"""
for i in {1, 2, 3, 4, 5, 5, 5, 5}:
    print(i, end = ' ')

print()
a=5/3
b=5//3
c=5%3

print(a,b,c)

print("-----------------------------")
"""
아래 func2 함수에서 c 는 전역, b는 func1 함수의 b를 취하려고 한다.
빈 칸에 알맞은 키워드를 차례대로 적으시오
"""

a = 1; b = 2; c = 3

def func1():
    a = 111
    b = 222
    def func2():
        global c
        nonlocal b
        print("func2안에서 a:{}, b:{}, c:{}".format(a, b, c))
        c=333
        b=444 #func2의 지역 변수를 벗어나서 func1에서도 영향력을 끼친다
    func2()
    print("func1안에서 a:{}, b:{}, c:{}".format(a, b, c))
func1()

print("-----------------------------")
"""
아래와 같은 명령문을 수행한 후의 결과를 적으시오.
"""
v1, *v2, v3 = [1, 2, 3, 4, 5]
print(v1)
print(v2)
print(v3)

print("-----------------------------")
"""
아래의 코드를 람다함수를 이용해 적으시오
"""

def Hap(m, n):
    return m + n


print(Hap(2,3))

print((lambda m,n:m+n))

print("-----------------------------")
"""
아래와 같이 range()를 이용하여 리스트 타입의 객체 자료를 출력하려고 한다.
출력 결과를 적고, range의 형식과 역할을 간단히 적으시오.

print(list(range(1, 6, 2))) 
"""
print(list(range(1, 6, 2))) 

print("-----------------------------")
"""
아래의 소스 코드를 실행 후 결과와 그 이유를 적으시오
"""
#datas = {'python', 'java', 'go'} 
#a = 0
#while a < 3:
#    print(datas[a])
#    a += 1

print("-----------------------------")
"""
while과 if문을 사용하여 아래와 같이 3, 5, 7, 9 단의 구구단을 출력하는 코드를 작성하시오
"""

#a = 2

#while a<10:
#    b = 1
#    if a % 2 == 1:
#        while b<10:
#            print("{} * {} = {}".format(a, b, a*b))
#            b += 1
#    a += 1
    
print("-----------------------------")
"""
1 ~ 100 사이의 정수 중에서 5의 배수의 합을 출력하는 소스 코드를 작성하시오.
이 때 func 라는 이름의 함수를 만들고, 함수 내에서 반복문 for를 사용하시오.
5의 배수의 합은 return 문을 사용하도록 한다.
"""
"""
def func(S=0):
    
    for a in range(1, 101):
        if a % 5 == 0:
            S+=a
    #return print("1~100까지 5의 배수의 합은 {}이다".format(S))
    return S
g=func()
print("1~100까지 5의 배수의 합은 {}이다.".format(g))
"""
print("-----------------------------")


"""
 for 문을 사용하여 1 ~ 100 사이의 정수 중 홀수의 합과 갯수를 출력할 수 있도록 소스를 작성하시오
"""


a=0
b=[]
for c in range(1, 101):
    if c % 2==1:
        a+=c
        b.append(c)

print("1~100까지 정수인 홀수의 합은 %s이다." % a)
print("1~100까지 정수인 홀수의 갯수는 {}이다.".format(len(b)))

print("-----------------------------")


"""
while 문을 사용하여 1 ~ 100 사이의 정수 중 짝수의 합과 갯수를 출력하는 코드를 작성하시오.
이 때 func 라는 이름의 함수를 만들고, 함수 내에서 반복문 while 문을 사용하시오.
결과는 return 문을 사용하도록 한다.
"""



def func(a=0, b=[]):
    c=1
    while c<=100:
        if c % 2 == 0:
            a += c
            b.append(c)
        c+=1
    return a, len(b)
d=func()
print("1~100까지 정수인 짝수의 합은 {}이고, 갯수는 {}입니다.".format(d[0], d[1]))


print("-----------------------------")


""""
for 문을 사용하시오.
동전을 2회(앞면은 1, 뒷면은 2라 하자) 던져서 나온 숫자들의 합이 2의 배수인 경우의 i, j 값을 출력하는 코드를 작성하시오.
for 문에 사용하는 변수 i는 첫번째 동전의 값이고, j는 두번째 동전의 값이다.
"""

for i in range(1, 3):
    for j in range(1, 3):
        #print(i+j)
        if (i+j) % 2==0:
            print(i,j)



















